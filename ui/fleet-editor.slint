import { ScrollView, Button, ComboBox, CheckBox, StandardButton } from "std-widgets.slint";

import { FleetData } from "./fleet-list.slint";

export struct ShipData {
    name: string,
    class: string,
    cost: int,
}

export struct DressingSlot {
    dressings: [string],
}
export struct DressingSlots {
    bow: [DressingSlot],
    core: [DressingSlot],
}

export struct DressingSelections {
    bow: [int],
    core: [int]
}

export struct LinerHullConfig {
    segment-bow: int,
    segment-core: int,
    segment-stern: int,
    bridge-model: int,
    bridge-segment: int,
    bridge-snappoint: int,
    dressings: DressingSelections,
}

component ShipListItem inherits TouchArea {
    in property <ShipData> ship;
    in property <color> background-colour;

    Rectangle {
        padding: 2px;
        height: 36px;
        background: background-colour;
        border-width: 1px;
        border-color: rgba(255, 255, 255, 0.1);

        VerticalLayout {
            Text {
                font-size: 18px;
                text: ship.name;
            }
            HorizontalLayout {
                Text {
                    color: rgba(255, 255, 255, 0.5);
                    font-size: 14px;
                    text: ship.class;
                }
                Rectangle {}
                Text {
                    horizontal-alignment: right;
                    color: rgba(255, 255, 255, 0.5);
                    font-size: 14px;
                    text: ship.cost;
                }
            }
        }
    }
}

component TableHeader inherits Rectangle {
    border-color: rgba(255, 255, 255, 0.1);
    border-width: 1px;
}
component TableItem inherits Rectangle {
    width: 150px;
    border-color: rgba(255, 255, 255, 0.1);
    border-width: 1px;
}

export component FleetEditorWindow inherits Window {
    in property <FleetData> fleet;
    in property <[ShipData]> ships;
    in property <DressingSlots> dressing-slots;
    in-out property <string> fleet-name;

    out property <int> selected_ship_idx: -1;

    width: 800px;
    height: 600px;
    title: "Editing " + fleet-name;

    property <LinerHullConfig> current_hull_config;
    callback save-liner-config(LinerHullConfig);
    callback get-liner-config() -> LinerHullConfig;

    callback load-dressings(LinerHullConfig);

    property <bool> checkbox_toggle: true;

    // Error popup
    property <string> error-popup-title;
    property <string> error-popup-message;
    public function show-error-popup(title: string, message: string) {
        error-popup-title = title;
        error-popup-message = message;
        error-popup.show();
    }
    error-popup := PopupWindow {
        height: main-window.height;
        width: main-window.width;
        x: 0;
        y: 0;
        close-policy: no-auto-close;

        VerticalLayout {
            Rectangle {}
            HorizontalLayout {
                Rectangle {}
                Rectangle {
                    max-width: 600px;
                    height: 25%;
                    border-radius: 4px;
                    background: rgba(0, 0, 0, 0.8);
                    VerticalLayout {
                        padding: 10px;
                        Text {
                            wrap: char-wrap;
                            text: error-popup-title;
                            font-size: 24px;
                        }

                        Text {
                            wrap: word-wrap;
                            text: error-popup-message;
                            font-size: 12px;
                        }

                        StandardButton {
                            kind: ok;
                            clicked => {
                                error-popup.close();
                            }
                        }
                    }
                }
                Rectangle {}
            }
            Rectangle {}
        }
    }

    // Main window
    main-window := HorizontalLayout {
        padding: 5px;
        VerticalLayout {
            alignment: start;
            Text {
                text: "Ships";
                font-size: 24px;
                vertical-stretch: 0.0;
            }
            ScrollView {
                width: 30%;
                height: 80%;
                viewport-height: ships.length * 36px;
                VerticalLayout {
                    for ship[idx] in ships: ShipListItem {
                        ship: ship;

                        clicked => {
                            selected_ship_idx = idx;

                            if (ships[selected_ship_idx].class == "Stock/Bulk Hauler" || ships[selected_ship_idx].class == "Stock/Container Hauler" || ships[selected_ship_idx].class == "Stock/Container Hauler Refit") {
                                current_hull_config = root.get-liner-config();
                                root.load-dressings(current_hull_config);
                                checkbox_toggle = true;
                            }
                            else {
                                checkbox_toggle = false;
                            }
                        }
                        states [
                            selected when selected_ship_idx == idx: {
                                background-colour: rgba(204, 134, 092, 1);
                            }
                            unselected when selected_ship_idx != idx: {
                                background-colour: rgba(0, 0, 0, 0);
                            }
                        ]
                    }
                }
            }
            Rectangle {
                vertical-stretch: 1.0;
            }
        }
        VerticalLayout {
            padding-left: 5px;
            if (ships[selected_ship_idx].class == "Stock/Bulk Hauler" || ships[selected_ship_idx].class == "Stock/Container Hauler" || ships[selected_ship_idx].class == "Stock/Container Hauler Refit"): marauder_editing := VerticalLayout {
                alignment: start;

                function update_current_hull_config() {
                    current_hull_config.segment-bow = combo-box-bow.current-index;
                    current_hull_config.segment-core = combo-box-core.current-index;
                    current_hull_config.segment-stern = combo-box-stern.current-index;
                    current_hull_config.bridge-model = combo-box-bridge-model.current-index;
                    current_hull_config.bridge-segment = bridge-location-bow.checked ? 0 : bridge-location-core.checked ? 1 : bridge-location-stern.checked ? 2 : 1;
                    current_hull_config.bridge-snappoint = 0;
                }

                function update-current-dressing-selections() {
                    current_hull_config.dressings.bow[0] = dressing-selection-bow-0.current-index;
                    current_hull_config.dressings.core[0] = dressing-selection-core-0.current-index;
                    current_hull_config.dressings.bow[1] = dressing-selection-bow-1.current-index;
                    current_hull_config.dressings.core[1] = dressing-selection-core-1.current-index;
                    current_hull_config.dressings.bow[2] = dressing-selection-bow-2.current-index;
                    current_hull_config.dressings.core[2] = dressing-selection-core-2.current-index;
                    current_hull_config.dressings.bow[3] = dressing-selection-bow-3.current-index;
                    current_hull_config.dressings.core[3] = dressing-selection-core-3.current-index;
                    current_hull_config.dressings.bow[4] = dressing-selection-bow-4.current-index;
                    current_hull_config.dressings.core[4] = dressing-selection-core-4.current-index;
                }

                HorizontalLayout {
                    Text {
                        text: "Liner Editing";
                        font-size: 24px;
                        horizontal-stretch: 1.0;
                    }
                    Button {
                        horizontal-stretch: 0.0;
                        text: "Save";
                        clicked => {
                            current_hull_config.segment-bow = combo-box-bow.current-index;
                            current_hull_config.segment-core = combo-box-core.current-index;
                            current_hull_config.segment-stern = combo-box-stern.current-index;
                            current_hull_config.bridge-model = combo-box-bridge-model.current-index;
                            current_hull_config.bridge-segment = bridge-location-bow.checked ? 0 : bridge-location-core.checked ? 1 : bridge-location-stern.checked ? 2 : 1;
                            current_hull_config.bridge-snappoint = 0;

                            root.save-liner-config(current_hull_config);
                        }
                    }
                }

                GridLayout {
                    width: 65%;
                    Row {
                        TableHeader {}
                        TableItem {width: 50px;}
                        TableItem {
                            Text {
                                font-size: 18px;
                                text: "Bow";
                            }
                        }
                        TableItem {
                            Text {
                                font-size: 18px;
                                text: "Core";
                            }
                        }
                        TableItem {
                            width: 50px;
                            Text {
                                font-size: 18px;
                                text: "Stern";
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                font-size: 18px;
                                text: "Hull Segments";
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            combo-box-bow := ComboBox {
                                width: 50px;
                                current-index: root.current_hull_config.segment-bow;
                                model: ["A", "B", "C"];
                                selected(current-value) => {
                                    update_current_hull_config();
                                    root.load-dressings(current_hull_config);
                                }
                            }
                        }
                        TableItem {
                            combo-box-core := ComboBox {
                                width: 50px;
                                current-index: root.current_hull_config.segment-core;
                                model: ["A", "B", "C"];
                                selected(current-value) => {
                                    update_current_hull_config();
                                    root.load-dressings(current_hull_config);
                                }
                            }
                        }
                        TableItem {
                            width: 50px;
                            combo-box-stern := ComboBox {
                                width: 50px;
                                current-index: root.current_hull_config.segment-stern;
                                model: ["A", "B", "C"];
                            }
                        } 
                    }
                    Row {
                        TableHeader {
                            Text {
                                font-size: 18px;
                                text: "Superstructure";
                            }
                        }
                        TableItem {
                            width: 50px;
                            combo-box-bridge-model := ComboBox {
                                width: 50px;
                                current-index: root.current_hull_config.bridge-model;
                                model: ["A", "B", "C", "D"];
                            }
                        }
                        TableItem {
                            bridge-location-bow := CheckBox {
                                toggled => {
                                    // bridge-location-bow.checked = false;
                                    bridge-location-core.checked = false;
                                    bridge-location-stern.checked = false;

                                    root.current_hull_config.bridge-segment = 0;
                                }
                                states [
                                    toggled_on when checkbox_toggle: {
                                        checked: current_hull_config.bridge-segment == 0 ? true : false;
                                    }
                                    toggled_off when checkbox_toggle: {
                                        checked: false;
                                    }
                                ]
                            }
                        }
                        TableItem {
                            bridge-location-core := CheckBox {
                                states [
                                    toggled_on when checkbox_toggle: {
                                        checked: current_hull_config.bridge-segment == 1 ? true : false;
                                    }
                                    toggled_off when checkbox_toggle: {
                                        checked: false;
                                    }
                                ]
                                toggled => {
                                    bridge-location-bow.checked = false;
                                    // bridge-location-core.checked = false;
                                    bridge-location-stern.checked = false;

                                    root.current_hull_config.bridge-segment = 1;
                                }
                            }
                        }
                        TableItem {
                            width: 50px;
                            bridge-location-stern := CheckBox {
                                states [
                                    toggled_on when checkbox_toggle: {
                                        checked: current_hull_config.bridge-segment == 2 ? true : false;
                                    }
                                    toggled_off when checkbox_toggle: {
                                        checked: false;
                                    }
                                ]
                                toggled => {
                                    bridge-location-bow.checked = false;
                                    bridge-location-core.checked = false;
                                    // bridge-location-stern.checked = false;
                                    
                                    root.current_hull_config.bridge-segment = 2;
                                }
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                text: "Dressing slot 1";
                                font-size: 18px;
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            dressing-selection-bow-0 := ComboBox {
                                width: 150px;
                                model: dressing-slots.bow[0].dressings;
                                current-index: current_hull_config.dressings.bow[0];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                        TableItem {
                            dressing-selection-core-0 := ComboBox {
                                width: 150px;
                                model: dressing-slots.core[0].dressings;
                                current-index: current_hull_config.dressings.core[0];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                text: "Dressing slot 2";
                                font-size: 18px;
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            dressing-selection-bow-1 := ComboBox {
                                width: 150px;
                                model: dressing-slots.bow[1].dressings;
                                current-index: current_hull_config.dressings.bow[1];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                        TableItem {
                            dressing-selection-core-1 := ComboBox {
                                width: 150px;
                                model: dressing-slots.core[1].dressings;
                                current-index: current_hull_config.dressings.core[1];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                text: "Dressing slot 3";
                                font-size: 18px;
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            dressing-selection-bow-2 := ComboBox {
                                width: 150px;
                                model: dressing-slots.bow[2].dressings;
                                current-index: current_hull_config.dressings.bow[2];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                        TableItem {
                            dressing-selection-core-2 := ComboBox {
                                width: 150px;
                                model: dressing-slots.core[2].dressings;
                                current-index: current_hull_config.dressings.core[2];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                text: "Dressing slot 4";
                                font-size: 18px;
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            dressing-selection-bow-3 := ComboBox {
                                width: 150px;
                                model: dressing-slots.bow[3].dressings;
                                current-index: current_hull_config.dressings.bow[3];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                        TableItem {
                            dressing-selection-core-3 := ComboBox {
                                width: 150px;
                                model: dressing-slots.core[3].dressings;
                                current-index: current_hull_config.dressings.core[3];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                    }
                    Row {
                        TableHeader {
                            Text {
                                text: "Dressing slot 5";
                                font-size: 18px;
                            }
                        }
                        TableItem {width: 50px;}
                        TableItem {
                            dressing-selection-bow-4 := ComboBox {
                                width: 150px;
                                model: dressing-slots.bow[4].dressings;
                                current-index: current_hull_config.dressings.bow[4];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                        TableItem {
                            dressing-selection-core-4 := ComboBox {
                                width: 150px;
                                model: dressing-slots.core[4].dressings;
                                current-index: current_hull_config.dressings.core[4];
                                selected(current-value) => {
                                    update-current-dressing-selections();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

