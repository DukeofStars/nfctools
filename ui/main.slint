import { Button, GridBox, VerticalBox, HorizontalBox, LineEdit, ScrollView } from "std-widgets.slint";

export struct FleetData {
    path: string,
    name: string,
    selected: bool,
}

export component MainWindow inherits Window {
    height: 600px;
    width: 800px;
    in property <[FleetData]> fleets;
    in-out property <string> cur_fleet_description;
    out property <string> merge_output_name;
    callback merge();
    callback viewing(int);
    callback show_error_popup(string, string);
    show_error_popup(title, message) => {
        error_title = title;
        error_message = message;
        error_popup.show();
    }
    out property <string> error_message;
    out property <string> error_title;
    error_popup := PopupWindow {
        height: 600px;
        width: 800px;
        x: 0;
        y: 0;
        close-policy: no-auto-close;
        VerticalLayout {
            Rectangle {
                height: 37.5%;
            }

            HorizontalLayout {
                Rectangle {
                    width: 37.5%;
                }

                Rectangle {
                    width: 25%;
                    height: 25%;
                    border-radius: 4px;
                    background: rgba(0, 0, 0, 0.8);
                    VerticalLayout {
                        padding: 10px;
                        Text {
                            text: error_title;
                            font-size: 24px;
                        }

                        Text {
                            text: error_message;
                            font-size: 12px;
                        }

                        Button {
                            text: "Ok";
                            clicked => {
                                error_popup.close();
                            }
                        }
                    }
                }
            }
        }
    }

    HorizontalLayout {
        padding-left: 5px;
        VerticalLayout {
            alignment: start;
            Text {
                text: "Fleets";
                font-size: 24px;
            }

            ScrollView {
                width: 70%;
                height: 600px - 30px;
                VerticalLayout {
                    padding-top: 15px;
                    for fleet[idx] in fleets: Rectangle {
                        height: 16px;
                        TouchArea {
                            Text {
                                text: fleet.name;
                                font-size: 16px;
                                padding: 5px;
                                horizontal-alignment: left;
                                width: 100%;
                            }

                            clicked => {
                                fleet.selected = !fleet.selected;
                                viewing(idx)
                            }
                        }

                        border-width: 1px;
                        border-color: rgba(255, 255, 255, 0.1);
                        states [
                            selected when fleet.selected: {
                                background: rgba(204, 134, 092, 1);
                            }
                            unselected when !fleet.selected: {}
                        ]
                    }
                }
            }
        }

        VerticalLayout {
            alignment: start;
            width: 30%;
            max-width: 240px;
            Text {
                text: "Actions";
                width: 100%;
                font-size: 24px;
                padding-bottom: 10px;
            }

            VerticalLayout {
                spacing: 10px;
                HorizontalLayout {
                    merge_output_name_input := LineEdit {
                        text: merge_output_name;
                    }

                    Button {
                        text: "Merge";
                        clicked => {
                            merge_output_name = merge_output_name_input.text;
                            root.merge();
                        }
                    }
                }

                HorizontalLayout {
                    Text {
                        text: "Edit Description";
                        font-size: 16px;
                    }

                    Button {
                        width: 40%;
                        text: "Save";
                    }
                }

                TextInput {
                    width: 100%;
                    height: 100%;
                    font-size: 12px;
                    wrap: word-wrap;
                    text: cur_fleet_description;
                }
            }
        }
    }
}
